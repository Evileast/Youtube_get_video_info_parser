def parse_video_info(raw_info):
    """
    Parser for YouTube's get_video_info data.
    Returns a dict, where 'url_encoded_fmt_stream_map' maps to a sorted list.
    """

    # Percent-encoding reserved characters, used as separators.
    sepr = {
        '&': '%26',
        ',': '%2C',
        '=': '%3D',
    }

    # fmt_level = {'itag': level, ...}
    # itag of a higher quality maps to a lower level number.
    # The highest quality has level number 0.
    fmt_level = dict(
        zip(
            [str(codec['itag'])
                for codec in
                    youtube_codecs],
            range(len(youtube_codecs))))

    # {key1: value1, key2: value2, ...,
    #   'url_encoded_fmt_stream_map': [{'itag': '38', ...}, ...]
    # }
    return dict(
        [(lambda metadata:
            ['url_encoded_fmt_stream_map', (
                lambda stream_map:
                    sorted(
                        [dict(
                            [subitem.split(sepr['='])
                                for subitem in
                                    item.split(sepr['&'])])
                            for item in
                                stream_map.split(sepr[','])],
                        key =
                            lambda stream:
                                fmt_level[stream['itag']]))
                (metadata[1])]
            if metadata[0] == 'url_encoded_fmt_stream_map'
            else metadata)
        (item.split('='))
            for item in
                raw_info.split('&')])
